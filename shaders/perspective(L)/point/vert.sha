#version 450 core

//vertex data
layout(location=0) in vec3 pos;
layout(location=1) in vec3 nor;
layout(location=2) in vec4 col;
layout(location=3) in vec2 tex;

layout(std430, binding=4) buffer OVMBUFF{
	mat4 OVM;
};

layout(std430, binding=5) buffer CVMBUFF{
	mat4 CVM;
};

//to fragment shader
out vec2 fragTex;
out vec3 fragPos;
out vec3 fragNor;
out vec4 fragCol;


void main(){
	fragPos=(OVM*vec4(pos.xyz,1.0)).xyz;
	fragNor=normalize((OVM*vec4(nor.xyz,0)).xyz);
	fragCol=col;
	fragTex=tex;
	gl_Position=CVM*OVM*vec4(pos.xyz,1.0);
}