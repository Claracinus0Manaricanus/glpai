#version 450 core

layout(location=0) in vec3 pos;
layout(location=1) in vec3 nor;
layout(location=2) in vec4 col;
layout(location=3) in vec2 tex;

layout(std430, binding=4) buffer OVMBUFF{
	mat4 OVM;
	vec3 SCALE;
};

layout(std430, binding=5) buffer CVMBUFF{
	mat4 CVM;
};

layout(std430, binding=6) buffer LVMBUFF{
	mat4 LVM;
    vec4 lData[2];
};

//to fragment shader
out vec3 fragNor;
out vec4 fragCol;
out vec2 fragTex;

out vec3 lVec;
out vec4 lCol;

out vec4 lvmFragPos;

void main(){
    fragNor=normalize(vec4(OVM*vec4(nor.xyz,0)).xyz);
    
    fragNor.x *= SCALE.y*SCALE.z;
	fragNor.y *= SCALE.x*SCALE.z;
	fragNor.z *= SCALE.y*SCALE.x;
    fragNor=normalize(fragNor);
    
    fragCol=col;
    fragTex=tex;
    gl_Position=CVM*OVM*vec4(pos.xyz * SCALE.xyz,1);

    lVec = normalize(lData[0].xyz);
    lCol = lData[1].xyzw;
    lvmFragPos = LVM*OVM*vec4(pos.xyz * SCALE.xyz,1);
}