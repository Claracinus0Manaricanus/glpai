#version 450 core
precision highp float;

//from vertex shader
in vec3 fragNor;
in vec4 fragCol;
in vec2 fragTex;

//texture
uniform sampler2D T0;

//shadow map
uniform sampler2D shadowMap;

//light data
in vec3 lVec;
in vec4 lCol;
in vec4 lvmFragPos;

out vec4 color;

void main(){
    vec3 newLVMPos = lvmFragPos.xyz / lvmFragPos.w;
    float newZ = (newLVMPos.z+1.0)/2.0;
    vec2 lvmTex = vec2((newLVMPos.x + 1)/2.0,(newLVMPos.y + 1)/2.0);
    
    if(newZ > texture(shadowMap, lvmTex).x + 0.1/lvmFragPos.w && newZ < 1.0){
        color = vec4(0,0,0,1);
    }else{
        vec4 texCol=texture(T0,fragTex);
        float intensity=dot(lVec,fragNor)*lCol.w;
        clamp(intensity,0,1);
        color=vec4(texCol.xyz*fragCol.xyz*lCol.xyz*intensity,texCol.w);
    }
}