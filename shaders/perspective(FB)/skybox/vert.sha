#version 450 core

layout(location=0) in vec3 pos;//vertex positions
layout(location=3) in vec2 tex;//vertex uv coordinates

uniform vec2 rot;
uniform int w;
uniform int h;

out vec2 fragTex;

mat4 rotYM4={//for camera Y axis rotation
	vec4(cos(rot.y), 0,sin(rot.y),  0),
	vec4(0,         1,        0,  0),
	vec4(-sin(rot.y),0,cos(rot.y),  0),
	vec4(0,         0,        0,  1)
};

mat4 rotXM4={//for cameras X axis rotation
	vec4(1,        0,         0, 0),
	vec4(0,cos(rot.x),-sin(rot.x), 0),
	vec4(0,sin(rot.x), cos(rot.x), 0),
	vec4(0,        0,         0, 1)
};

mat4 pers={//for 120 degrees of fov
	vec4(1/tan(1.05),    0,    0, 0),
	vec4(0,w/(h*tan(1.05)),    0, 0),
	vec4(0,              0,    1, 1),
	vec4(0,              0, -0.01, 0),	
};

void main(){
    fragTex=tex;
	//z cordinate calculation needs check
    gl_Position=rotXM4*rotYM4*vec4(pos.xy,1,1);
}