#version 450 core

uniform sampler2D tex0;
out vec4 col;
in vec2 tex;

float edgeKernel[9]={
	-1.0, -1.0, -1.0,

	-1.0,  8.0, -1.0,

	-1.0, -1.0, -1.0
};

float gaussKernel[9]={
	1.0/16.0, 2.0/16.0, 1.0/16.0,

	2.0/16.0, 4.0/16.0, 2.0/16.0,
	
	1.0/16.0, 2.0/16.0, 1.0/16.0
};

float boxBlurKernel[9]={
	1.0/9.0, 1.0/9.0, 1.0/9.0,

	1.0/9.0, 1.0/9.0, 1.0/9.0,

	1.0/9.0, 1.0/9.0, 1.0/9.0
};

float identityKernel[9]={
	0.0, 0.0, 0.0,

	0.0, 1.0, 0.0,

	0.0, 0.0, 0.0
};

float sharpenKernel[9]={
	-1.0, -1.0, -1.0,
	
	-1.0,  9.0, -1.0,

	-1.0, -1.0, -1.0
};

float sharpenLessKernel[9]={
	 0.0, -1.0,  0.0,
	
	-1.0,  5.0, -1.0,

	 0.0, -1.0,  0.0
};

void main(){
	col=vec4(0,0,0,1);

	for(int i=-1; i < 2; i++){
		for(int k=-1; k < 2; k++){
			col += identityKernel[(i+1)+(k+1)*3]*texture(tex0,vec2(tex.x+(0.001*i), tex.y+(0.001*k)));
		}
	}

	col = vec4(col.xyz,1);

	//for shadow map viewing
	//col = vec4(texture(tex0, tex).xxx,1);
}
